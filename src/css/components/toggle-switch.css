/* components/toggle-switch.css */

/* Import variables */
@import '../variables.css';

/* Toggle Switch Container */
.toggle-switch {
    position: relative;
    display: inline-block;
    width: 50px; /* Default width */
    height: 24px; /* Default height */
}

/* Hide the default checkbox */
.toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* Slider (background) */
.toggle-switch .slider {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--background-box); /* Use box background as default */
    border-radius: 24px;
    transition: background-color 0.3s ease;
    border: 1px solid var(--border-color); /* Match input border */
}

/* When the input is checked, change the slider color */
.toggle-switch input:checked + .slider {
    background-color: var(--color-success); /* Success green for active state */
}

/* Slider's Knob */
.toggle-switch .slider:before {
    position: absolute;
    content: "";
    height: 16px; /* Slightly smaller than the height */
    width: 16px;
    left: 4px;
    bottom: 4px;
    background-color: var(--text-color);
    border-radius: 50%;
    transition: transform 0.3s ease, background-color 0.3s ease;
}

/* When checked, move the knob */
.toggle-switch input:checked + .slider:before {
    transform: translateX(26px); /* Moves the knob to the right */
}

/* Add the transition for disabled state as well */
.toggle-switch input:disabled:checked + .slider:before {
    transform: translateX(26px); /* Knob still moves even when disabled */
}

/* Disabled State */
.toggle-switch input:disabled + .slider {
    background-color: var(--color-disabled); /* Soft disabled background */
    cursor: not-allowed;
}

.toggle-switch input:disabled + .slider:before {
    background-color: var(--color-disabled-text); /* Disabled knob color */
}

/* Optional focus state for accessibility */
.toggle-switch input:focus + .slider {
    box-shadow: 0 0 3px var(--highlight-glow); /* Highlight for focus */
}
